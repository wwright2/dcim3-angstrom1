Index: openjdk/jdk/src/share/classes/java/net/URLClassLoader.java
===================================================================
--- openjdk.orig/jdk/src/share/classes/java/net/URLClassLoader.java	2011-06-13 16:58:42.000000000 +0200
+++ openjdk/jdk/src/share/classes/java/net/URLClassLoader.java	2011-06-28 18:43:50.114802612 +0200
@@ -438,14 +438,12 @@
             // Use (direct) ByteBuffer:
             CodeSigner[] signers = res.getCodeSigners();
             CodeSource cs = new CodeSource(url, signers);
-            sun.misc.PerfCounter.getReadClassBytesTime().addElapsedTimeFrom(t0);
             return defineClass(name, bb, cs);
         } else {
             byte[] b = res.getBytes();
             // must read certificates AFTER reading bytes.
             CodeSigner[] signers = res.getCodeSigners();
             CodeSource cs = new CodeSource(url, signers);
-            sun.misc.PerfCounter.getReadClassBytesTime().addElapsedTimeFrom(t0);
             return defineClass(name, b, 0, b.length, cs);
         }
     }
Index: openjdk/jdk/src/share/classes/java/lang/ClassLoader.java
===================================================================
--- openjdk.orig/jdk/src/share/classes/java/lang/ClassLoader.java	2011-06-13 16:58:42.000000000 +0200
+++ openjdk/jdk/src/share/classes/java/lang/ClassLoader.java	2011-06-28 18:43:50.142802778 +0200
@@ -422,10 +422,6 @@
                     long t1 = System.nanoTime();
                     c = findClass(name);
 
-                    // this is the defining class loader; record the stats
-                    sun.misc.PerfCounter.getParentDelegationTime().addTime(t1 - t0);
-                    sun.misc.PerfCounter.getFindClassTime().addElapsedTimeFrom(t1);
-                    sun.misc.PerfCounter.getFindClasses().increment();
                 }
             }
             if (resolve) {
Index: openjdk/jdk/src/share/classes/java/util/zip/ZipFile.java
===================================================================
--- openjdk.orig/jdk/src/share/classes/java/util/zip/ZipFile.java
+++ openjdk/jdk/src/share/classes/java/util/zip/ZipFile.java
@@ -213,8 +213,6 @@ class ZipFile implements ZipConstants, Closeable {
         this.zc = ZipCoder.get(charset);
         long t0 = System.nanoTime();
         jzfile = open(name, mode, file.lastModified(), usemmap);
-        sun.misc.PerfCounter.getZipFileOpenTime().addElapsedTimeFrom(t0);
-        sun.misc.PerfCounter.getZipFileCount().increment();
         this.name = name;
         this.total = getTotal(jzfile);
         this.locsig = startsWithLOC(jzfile);
