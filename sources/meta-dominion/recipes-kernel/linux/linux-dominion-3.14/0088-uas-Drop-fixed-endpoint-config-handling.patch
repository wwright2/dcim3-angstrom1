From 93ba1f234e25fd3b31fbd4cc3f286588df6381f6 Mon Sep 17 00:00:00 2001
From: Hans de Goede <hdegoede@redhat.com>
Date: Tue, 29 Oct 2013 10:10:36 +0100
Subject: [PATCH 088/122] uas: Drop fixed endpoint config handling

The fixed endpoint config code was only necessary to deal with an early
uas prototype which has never been released, so lets drop it and enforce
proper uas endpoint descriptors.

Signed-off-by: Hans de Goede <hdegoede@redhat.com>
Signed-off-by: Sarah Sharp <sarah.a.sharp@linux.intel.com>
---
 drivers/usb/storage/uas.c | 36 +++++++++++-------------------------
 1 file changed, 11 insertions(+), 25 deletions(-)

diff --git a/drivers/usb/storage/uas.c b/drivers/usb/storage/uas.c
index 5cedc7f..754468b 100644
--- a/drivers/usb/storage/uas.c
+++ b/drivers/usb/storage/uas.c
@@ -908,31 +908,17 @@ static void uas_configure_endpoints(struct uas_dev_info *devinfo)
 	devinfo->cmnd = NULL;
 
 	r = uas_find_endpoints(devinfo->intf->cur_altsetting, eps);
-
-	/*
-	 * Assume that if we didn't find a proper set of descriptors, we're
-	 * using a device with old firmware that happens to be set up like
-	 * this.
-	 */
-	if (r != 0) {
-		devinfo->cmd_pipe = usb_sndbulkpipe(udev, 1);
-		devinfo->status_pipe = usb_rcvbulkpipe(udev, 1);
-		devinfo->data_in_pipe = usb_rcvbulkpipe(udev, 2);
-		devinfo->data_out_pipe = usb_sndbulkpipe(udev, 2);
-
-		eps[1] = usb_pipe_endpoint(udev, devinfo->status_pipe);
-		eps[2] = usb_pipe_endpoint(udev, devinfo->data_in_pipe);
-		eps[3] = usb_pipe_endpoint(udev, devinfo->data_out_pipe);
-	} else {
-		devinfo->cmd_pipe = usb_sndbulkpipe(udev,
-					     usb_endpoint_num(&eps[0]->desc));
-		devinfo->status_pipe = usb_rcvbulkpipe(udev,
-					     usb_endpoint_num(&eps[1]->desc));
-		devinfo->data_in_pipe = usb_rcvbulkpipe(udev,
-					     usb_endpoint_num(&eps[2]->desc));
-		devinfo->data_out_pipe = usb_sndbulkpipe(udev,
-					     usb_endpoint_num(&eps[3]->desc));
-	}
+	if (r)
+		return r;
+
+	devinfo->cmd_pipe = usb_sndbulkpipe(udev,
+					    usb_endpoint_num(&eps[0]->desc));
+	devinfo->status_pipe = usb_rcvbulkpipe(udev,
+					    usb_endpoint_num(&eps[1]->desc));
+	devinfo->data_in_pipe = usb_rcvbulkpipe(udev,
+					    usb_endpoint_num(&eps[2]->desc));
+	devinfo->data_out_pipe = usb_sndbulkpipe(udev,
+					    usb_endpoint_num(&eps[3]->desc));
 
 	devinfo->qdepth = usb_alloc_streams(devinfo->intf, eps + 1, 3, 256,
 								GFP_KERNEL);
-- 
1.8.3.4

